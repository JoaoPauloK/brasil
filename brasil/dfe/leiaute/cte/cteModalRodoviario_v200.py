# Generated by xsd2py.py
# DO NOT CHANGE THIS FILE (use compile override instead)
# xsd: cteModalRodoviario_v2.00.xsd
# xmlns: http://www.portalfiscal.inf.br/cte
from typing import List, Annotated
from datetime import date, datetime
from decimal import Decimal

from brasil.dfe.xsd import Choice, SimpleType, ComplexType, Attribute, Element, TString, Restriction, ID, base64Binary, anyURI, string, dateTime, TXML, ElementList, XmlSignature
from .tiposGeralCTe_v200 import *
from .cteTiposBasico_v200 import *


class TRNTRC(str):
    """Tipo RNTRC - Registro Nacional Transportadores Rodoviários de Carga"""
    pass


class TPlaca(str):
    """Tipo Placa """
    pass


class TCIOT(str):
    """Tipo CIOT - Código Identificador da Operação de Transporte"""
    pass


class rodo(ComplexType):
    """Informações do modal Rodoviário"""
    RNTRC: Annotated[TRNTRC, Element] = None
    dPrev: Annotated[TData, Element] = None
    lota: Annotated[str, Element] = None
    CIOT: Annotated[TCIOT, Element] = None

    class _occ(ComplexType):
        """Ordens de Coleta associados"""
        serie: Annotated[str, Element] = None
        nOcc: Annotated[str, Element] = None
        dEmi: Annotated[TData, Element] = None

        class _emiOcc(ComplexType):
            CNPJ: Annotated[TCnpj, Element] = None
            cInt: Annotated[str, Element] = None
            IE: Annotated[TIe, Element] = None
            UF: Annotated[TUf, Element] = None
            fone: Annotated[TFone, Element] = None

        emiOcc: Annotated[_emiOcc, Element] = None

    occ: Annotated[ElementList[_occ], Element] = None

    class _valePed(ComplexType):
        """Informações de Vale Pedágio
Outras informações sobre Vale-Pedágio obrigatório que não tenham campos específicos devem ser informadas no campo de observações gerais de uso livre pelo contribuinte, visando atender as determinações legais vigentes."""
        CNPJForn: Annotated[TCnpj, Element] = None
        nCompra: Annotated[str, Element] = None
        CNPJPg: Annotated[TCnpjOpc, Element] = None
        vValePed: Annotated[TDec_1302, Element] = None

    valePed: Annotated[ElementList[_valePed], Element] = None

    class _veic(ComplexType):
        """Dados dos Veículos
Um CT-e poderá ter vários veículos associados, ex.: cavalo + reboque.
						Só preenchido em CT-e rodoviário de lotação."""
        cInt: Annotated[str, Element] = None
        RENAVAM: Annotated[str, Element] = None
        placa: Annotated[TPlaca, Element] = None
        tara: Annotated[str, Element] = None
        capKG: Annotated[str, Element] = None
        capM3: Annotated[str, Element] = None
        tpProp: Annotated[str, Element] = None
        tpVeic: Annotated[str, Element] = None
        tpRod: Annotated[str, Element] = None
        tpCar: Annotated[str, Element] = None
        UF: Annotated[TUf, Element] = None

        class _prop(ComplexType):
            """Proprietários do Veículo.
									Só preenchido quando o veículo não pertencer à empresa emitente do CT-e"""
            CPF: Annotated[TCpf, Element] = None
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF_CNPJ = Choice("CPF", "CNPJ")
            RNTRC: Annotated[TRNTRC, Element] = None
            xNome: Annotated[str, Element] = None
            IE: Annotated[TIeDest, Element] = None
            UF: Annotated[TUf, Element] = None
            tpProp: Annotated[str, Element] = None

        prop: Annotated[_prop, Element] = None

    veic: Annotated[ElementList[_veic], Element] = None

    class _lacRodo(ComplexType):
        """Lacres"""
        nLacre: Annotated[str, Element] = None

    lacRodo: Annotated[ElementList[_lacRodo], Element] = None

    class _moto(ComplexType):
        """Informações do(s) Motorista(s)
Só preenchido em CT-e rodoviário de lotação"""
        xNome: Annotated[str, Element] = None
        CPF: Annotated[TCpf, Element] = None

    moto: Annotated[ElementList[_moto], Element] = None


