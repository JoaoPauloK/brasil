# Generated by xsd2py.py
# DO NOT CHANGE THIS FILE (use compile override instead)
# xsd: eventoMDFeTiposBasico_v3.00.xsd
# xmlns: http://www.portalfiscal.inf.br/mdfe

from .evCancMDFe_v300 import *
from .evEncMDFe_v300 import *
from .tiposGeralMDFe_v300 import *


class TVerEvento(str):
    """Tipo Versão do Evento"""
    pass


class TEvento(ComplexType):
    """Tipo Evento"""
    versao: Annotated[TVerEvento, Attribute] = None

    class _infEvento(ComplexType):
        Id: Annotated[str, Attribute(pattern=r'ID[0-9]{52}|ID[0-9]{53}')] = None
        cOrgao: Annotated[TCOrgaoIBGE, Element] = None
        tpAmb: Annotated[TAmb, Element] = None
        CNPJ: Annotated[TCnpj, Element] = None
        CPF: Annotated[TCpf, Element] = None
        CNPJ_CPF = Choice("CNPJ", "CPF")
        chMDFe: Annotated[TChMDFe, Element] = None
        dhEvento: Annotated[TDateTimeUTC, Element] = None
        tpEvento: Annotated[str, Element] = None
        nSeqEvento: Annotated[str, Element] = None

        class _detEvento(ComplexType):
            """Detalhamento do evento específico"""
            versaoEvento: Annotated[TVerEvento, Attribute] = None
            evEncMDFe: Annotated[evEncMDFe, Element] = None
            evCancMDFe: Annotated[evCancMDFe, Element] = None

        detEvento: Annotated[_detEvento, Element] = None

        class _infSolicNFF(ComplexType):
            """Grupo de informações do pedido de registro de evento da Nota Fiscal Fácil"""
            xSolic: Annotated[str, Element] = None

        infSolicNFF: Annotated[_infSolicNFF, Element] = None

        class _infPAA(ComplexType):
            """Grupo de Informação do Provedor de Assinatura e Autorização"""
            CNPJPAA: Annotated[TCnpj, Element] = None

            class _PAASignature(ComplexType):
                """Assinatura RSA do Emitente para DFe gerados por PAA"""
                SignatureValue: Annotated[base64Binary, Element] = None
                RSAKeyValue: Annotated[TRSAKeyValueType, Element] = None

            PAASignature: Annotated[_PAASignature, Element] = None

        infPAA: Annotated[_infPAA, Element] = None

    infEvento: Annotated[_infEvento, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TRetEvento(ComplexType):
    """Tipo retorno do Evento"""
    versao: Annotated[TVerEvento, Attribute] = None

    class _infEvento(ComplexType):
        Id: Annotated[str, Attribute(pattern=r'ID[0-9]{15}')] = None
        tpAmb: Annotated[TAmb, Element] = None
        verAplic: Annotated[TVerAplic, Element] = None
        cOrgao: Annotated[TCOrgaoIBGE, Element] = None
        cStat: Annotated[TStat, Element] = None
        xMotivo: Annotated[TMotivo, Element] = None
        chMDFe: Annotated[TChMDFe, Element] = None
        tpEvento: Annotated[str, Element] = None
        xEvento: Annotated[str, Element] = None
        nSeqEvento: Annotated[str, Element] = None
        dhRegEvento: Annotated[TDateTimeUTC, Element] = None
        nProt: Annotated[TProt, Element] = None

    infEvento: Annotated[_infEvento, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TProcEvento(ComplexType):
    """Tipo procEvento"""
    versao: Annotated[TVerEvento, Attribute] = None
    ipTransmissor: Annotated[TIPv4, Attribute] = None
    nPortaCon: Annotated[str, Attribute(pattern=r'[0-9]{1,5}')] = None
    dhConexao: Annotated[TDateTimeUTC, Attribute] = None
    eventoMDFe: Annotated[TEvento, Element] = None
    retEventoMDFe: Annotated[TRetEvento, Element] = None


