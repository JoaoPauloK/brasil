# Generated by xsd2py.py
# DO NOT CHANGE THIS FILE (use compile override instead)
# xsd: mdfeTiposBasico_v3.00.xsd
# xmlns: http://www.portalfiscal.inf.br/mdfe
from typing import List, Annotated
from datetime import date, datetime
from decimal import Decimal

from brasil.dfe.xsd import Choice, SimpleType, ComplexType, Attribute, Element, TString, Restriction, ID, base64Binary, anyURI, string, dateTime, TXML, ElementList, XmlSignature
from .tiposGeralMDFe_v300 import *


class TEmail(str):
    """Tipo Email"""
    pass


class TEndeEmi(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None
    fone: Annotated[str, Element] = None
    email: Annotated[TEmail, Element] = None


class TContainer(str):
    """Tipo Número do Container"""
    pass


class TUnidCarga(ComplexType):
    """Tipo Dados Unidade de Carga"""
    tpUnidCarga: Annotated[TtipoUnidCarga, Element] = None
    idUnidCarga: Annotated[TContainer, Element] = None

    class _lacUnidCarga(ComplexType):
        """Lacres das Unidades de Carga"""
        nLacre: Annotated[str, Element] = None

    lacUnidCarga: Annotated[ElementList[_lacUnidCarga], Element] = None
    qtdRat: Annotated[TDec_0302_0303, Element] = None


class TUnidadeTransp(ComplexType):
    """Tipo Dados Unidade de Transporte"""
    tpUnidTransp: Annotated[TtipoUnidTransp, Element] = None
    idUnidTransp: Annotated[TContainer, Element] = None

    class _lacUnidTransp(ComplexType):
        """Lacres das Unidades de Transporte"""
        nLacre: Annotated[str, Element] = None

    lacUnidTransp: Annotated[ElementList[_lacUnidTransp], Element] = None
    infUnidCarga: Annotated[ElementList[TUnidCarga], Element] = None
    qtdRat: Annotated[TDec_0302_0303, Element] = None


class TRespTec(ComplexType):
    """Tipo Dados da Responsável Técnico"""
    CNPJ: Annotated[TCnpj, Element] = None
    xContato: Annotated[str, Element] = None
    email: Annotated[TEmail, Element] = None
    fone: Annotated[str, Element] = None
    idCSRT: Annotated[str, Element] = None
    hashCSRT: Annotated[base64Binary, Element] = None


class TProcEmi(str):
    """Tipo processo de emissão do MDF-e"""
    pass


class TModalMD(str):
    """Tipo Modal Manifesto"""
    pass


class TVerMDe(str):
    """ Tipo Versão do MDF-e - 3.00"""
    pass


class TMDFe(ComplexType):
    """Tipo Manifesto de Documentos Fiscais Eletrônicos"""

    class _infMDFe(ComplexType):
        """Informações do MDF-e"""
        versao: Annotated[TVerMDe, Attribute] = None
        Id: Annotated[str, Attribute(pattern=r'MDFe[0-9]{44}')] = None

        class _ide(ComplexType):
            """Identificação do MDF-e"""
            cUF: Annotated[TCodUfIBGE, Element] = None
            tpAmb: Annotated[TAmb, Element] = None
            tpEmit: Annotated[TEmit, Element] = None
            tpTransp: Annotated[TTransp, Element] = None
            mod: Annotated[TModMD, Element] = None
            serie: Annotated[TSerie, Element] = None
            nMDF: Annotated[TNF, Element] = None
            cMDF: Annotated[str, Element] = None
            cDV: Annotated[str, Element] = None
            modal: Annotated[TModalMD, Element] = None
            dhEmi: Annotated[TDateTimeUTC, Element] = None
            tpEmis: Annotated[str, Element] = None
            procEmi: Annotated[TProcEmi, Element] = None
            verProc: Annotated[str, Element] = None
            UFIni: Annotated[TUf, Element] = None
            UFFim: Annotated[TUf, Element] = None

            class _infMunCarrega(ComplexType):
                """Informações dos Municípios de Carregamento"""
                cMunCarrega: Annotated[TCodMunIBGE, Element] = None
                xMunCarrega: Annotated[str, Element] = None

            infMunCarrega: Annotated[ElementList[_infMunCarrega], Element] = None

            class _infPercurso(ComplexType):
                """Informações do Percurso do MDF-e"""
                UFPer: Annotated[TUf, Element] = None

            infPercurso: Annotated[ElementList[_infPercurso], Element] = None
            dhIniViagem: Annotated[TDateTimeUTC, Element] = None
            indCanalVerde: Annotated[str, Element] = None
            indCarregaPosterior: Annotated[str, Element] = None

        ide: Annotated[_ide, Element] = None

        class _emit(ComplexType):
            """Identificação do Emitente do Manifesto"""
            CNPJ: Annotated[TCnpj, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            IE: Annotated[TIe, Element] = None
            xNome: Annotated[str, Element] = None
            xFant: Annotated[str, Element] = None
            enderEmit: Annotated[TEndeEmi, Element] = None

        emit: Annotated[_emit, Element] = None

        class _infModal(ComplexType):
            """Informações do modal"""
            versaoModal: Annotated[str, Attribute(pattern=r'3\.(0[0-9]|[1-9][0-9])')] = None

        infModal: Annotated[_infModal, Element] = None

        class _infDoc(ComplexType):
            """Informações dos Documentos fiscais vinculados ao manifesto"""

            class _infMunDescarga(ComplexType):
                """Informações dos Municípios de descarregamento"""
                cMunDescarga: Annotated[TCodMunIBGE, Element] = None
                xMunDescarga: Annotated[str, Element] = None

                class _infCTe(ComplexType):
                    """Conhecimentos de Tranporte - usar este grupo quando for prestador de serviço de transporte"""
                    chCTe: Annotated[TChCTe, Element] = None
                    SegCodBarra: Annotated[TSegCodBarra, Element] = None
                    indReentrega: Annotated[str, Element] = None
                    infUnidTransp: Annotated[ElementList[TUnidadeTransp], Element] = None

                    class _peri(ComplexType):
                        """Preenchido quando for  transporte de produtos classificados pela ONU como perigosos."""
                        nONU: Annotated[str, Element] = None
                        xNomeAE: Annotated[str, Element] = None
                        xClaRisco: Annotated[str, Element] = None
                        grEmb: Annotated[str, Element] = None
                        qTotProd: Annotated[str, Element] = None
                        qVolTipo: Annotated[str, Element] = None

                    peri: Annotated[ElementList[_peri], Element] = None

                    class _infEntregaParcial(ComplexType):
                        """Grupo de informações da Entrega Parcial (Corte de Voo)"""
                        qtdTotal: Annotated[TDec_1104, Element] = None
                        qtdParcial: Annotated[TDec_1104, Element] = None

                    infEntregaParcial: Annotated[_infEntregaParcial, Element] = None

                infCTe: Annotated[ElementList[_infCTe], Element] = None

                class _infNFe(ComplexType):
                    """Nota Fiscal Eletronica"""
                    chNFe: Annotated[TChNFe, Element] = None
                    SegCodBarra: Annotated[TSegCodBarra, Element] = None
                    indReentrega: Annotated[str, Element] = None
                    infUnidTransp: Annotated[ElementList[TUnidadeTransp], Element] = None

                    class _peri(ComplexType):
                        """Preenchido quando for  transporte de produtos classificados pela ONU como perigosos."""
                        nONU: Annotated[str, Element] = None
                        xNomeAE: Annotated[str, Element] = None
                        xClaRisco: Annotated[str, Element] = None
                        grEmb: Annotated[str, Element] = None
                        qTotProd: Annotated[str, Element] = None
                        qVolTipo: Annotated[str, Element] = None

                    peri: Annotated[ElementList[_peri], Element] = None

                infNFe: Annotated[ElementList[_infNFe], Element] = None

                class _infMDFeTransp(ComplexType):
                    """Manifesto Eletrônico de Documentos Fiscais. Somente para modal Aquaviário (vide regras MOC)"""
                    chMDFe: Annotated[TChNFe, Element] = None
                    indReentrega: Annotated[str, Element] = None
                    infUnidTransp: Annotated[ElementList[TUnidadeTransp], Element] = None

                    class _peri(ComplexType):
                        """Preenchido quando for  transporte de produtos classificados pela ONU como perigosos."""
                        nONU: Annotated[str, Element] = None
                        xNomeAE: Annotated[str, Element] = None
                        xClaRisco: Annotated[str, Element] = None
                        grEmb: Annotated[str, Element] = None
                        qTotProd: Annotated[str, Element] = None
                        qVolTipo: Annotated[str, Element] = None

                    peri: Annotated[ElementList[_peri], Element] = None

                infMDFeTransp: Annotated[ElementList[_infMDFeTransp], Element] = None

            infMunDescarga: Annotated[ElementList[_infMunDescarga], Element] = None

        infDoc: Annotated[_infDoc, Element] = None

        class _seg(ComplexType):
            """Informações de Seguro da Carga"""

            class _infResp(ComplexType):
                """Informações do responsável pelo seguro da carga"""
                respSeg: Annotated[str, Element] = None
                CNPJ: Annotated[TCnpj, Element] = None
                CPF: Annotated[TCpf, Element] = None
                CNPJ_CPF = Choice("CNPJ", "CPF")

            infResp: Annotated[_infResp, Element] = None

            class _infSeg(ComplexType):
                """Informações da seguradora"""
                xSeg: Annotated[str, Element] = None
                CNPJ: Annotated[TCnpjOpc, Element] = None

            infSeg: Annotated[_infSeg, Element] = None
            nApol: Annotated[str, Element] = None
            nAver: Annotated[ElementList[str], Element] = None

        seg: Annotated[ElementList[_seg], Element] = None

        class _prodPred(ComplexType):
            """Produto predominante
Informar a descrição do produto predominante"""
            tpCarga: Annotated[str, Element] = None
            xProd: Annotated[str, Element] = None
            cEAN: Annotated[str, Element] = None
            NCM: Annotated[str, Element] = None

            class _infLotacao(ComplexType):
                """Informações da carga lotação. Informar somente quando MDF-e for de carga lotação"""

                class _infLocalCarrega(ComplexType):
                    """Informações da localização de carregamento do MDF-e de carga lotação"""
                    CEP: Annotated[str, Element] = None
                    latitude: Annotated[TLatitude, Element] = None
                    longitude: Annotated[TLongitude, Element] = None
                    CEP_ = Choice("CEP")

                infLocalCarrega: Annotated[_infLocalCarrega, Element] = None

                class _infLocalDescarrega(ComplexType):
                    """Informações da localização de descarregamento do MDF-e de carga lotação"""
                    CEP: Annotated[str, Element] = None
                    latitude: Annotated[TLatitude, Element] = None
                    longitude: Annotated[TLongitude, Element] = None
                    CEP_ = Choice("CEP")

                infLocalDescarrega: Annotated[_infLocalDescarrega, Element] = None

            infLotacao: Annotated[_infLotacao, Element] = None

        prodPred: Annotated[_prodPred, Element] = None

        class _tot(ComplexType):
            """Totalizadores da carga transportada e seus documentos fiscais"""
            qCTe: Annotated[str, Element] = None
            qNFe: Annotated[str, Element] = None
            qMDFe: Annotated[str, Element] = None
            vCarga: Annotated[TDec_1302, Element] = None
            cUnid: Annotated[str, Element] = None
            qCarga: Annotated[TDec_1104, Element] = None

        tot: Annotated[_tot, Element] = None

        class _lacres(ComplexType):
            """Lacres do MDF-e
Preechimento opcional para os modais Rodoviário e Ferroviário"""
            nLacre: Annotated[str, Element] = None

        lacres: Annotated[ElementList[_lacres], Element] = None

        class _autXML(ComplexType):
            """Autorizados para download do XML do DF-e
Informar CNPJ ou CPF. Preencher os zeros não significativos."""
            CNPJ: Annotated[TCnpj, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")

        autXML: Annotated[ElementList[_autXML], Element] = None

        class _infAdic(ComplexType):
            """Informações Adicionais"""
            infAdFisco: Annotated[str, Element] = None
            infCpl: Annotated[str, Element] = None

        infAdic: Annotated[_infAdic, Element] = None
        infRespTec: Annotated[TRespTec, Element] = None

        class _infSolicNFF(ComplexType):
            """Grupo de informações do pedido de emissão da Nota Fiscal Fácil"""
            xSolic: Annotated[str, Element] = None

        infSolicNFF: Annotated[_infSolicNFF, Element] = None

        class _infPAA(ComplexType):
            """Grupo de Informação do Provedor de Assinatura e Autorização"""
            CNPJPAA: Annotated[TCnpj, Element] = None

            class _PAASignature(ComplexType):
                """Assinatura RSA do Emitente para DFe gerados por PAA"""
                SignatureValue: Annotated[base64Binary, Element] = None
                RSAKeyValue: Annotated[TRSAKeyValueType, Element] = None

            PAASignature: Annotated[_PAASignature, Element] = None

        infPAA: Annotated[_infPAA, Element] = None

    infMDFe: Annotated[_infMDFe, Element] = None

    class _infMDFeSupl(ComplexType):
        """Informações suplementares do MDF-e"""
        qrCodMDFe: Annotated[str, Element] = None

    infMDFeSupl: Annotated[_infMDFeSupl, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TIdLote(str):
    """Tipo Identificador de controle do envio do lote. Número seqüencial auto-incremental, de controle correspondente ao identificador único do lote enviado. A responsabilidade de gerar e controlar esse número é do próprio contribuinte."""
    pass


class TEnviMDFe(ComplexType):
    """Tipo Pedido de Autorização Assíncrona de MDF-e"""
    versao: Annotated[TVerMDe, Attribute] = None
    idLote: Annotated[TIdLote, Element] = None
    MDFe: Annotated[TMDFe, Element] = None


class TProtMDFe(ComplexType):
    """Tipo Protocolo de status resultado do processamento do MDF-e"""
    versao: Annotated[TVerMDe, Attribute] = None

    class _infProt(ComplexType):
        """Dados do protocolo de status"""
        Id: Annotated[str, Attribute] = None
        tpAmb: Annotated[TAmb, Element] = None
        verAplic: Annotated[TVerAplic, Element] = None
        chMDFe: Annotated[TChMDFe, Element] = None
        dhRecbto: Annotated[TDateTimeUTC, Element] = None
        nProt: Annotated[TProt, Element] = None
        digVal: Annotated[TXML, Element] = None
        cStat: Annotated[TStat, Element] = None
        xMotivo: Annotated[TMotivo, Element] = None

    infProt: Annotated[_infProt, Element] = None

    class _infFisco(ComplexType):
        """Mensagem do Fisco"""
        cMsg: Annotated[TStat, Element] = None
        xMsg: Annotated[TMotivo, Element] = None

    infFisco: Annotated[_infFisco, Element] = None
    Signature: Annotated[XmlSignature, Element] = None


class TRetMDFe(ComplexType):
    """Tipo Retorno do Pedido de Autorização do MDF-e"""
    versao: Annotated[TVerMDe, Attribute] = None
    tpAmb: Annotated[str, Element] = None
    cUF: Annotated[TCodUfIBGE, Element] = None
    verAplic: Annotated[TVerAplic, Element] = None
    cStat: Annotated[TStat, Element] = None
    xMotivo: Annotated[TMotivo, Element] = None
    protMDFe: Annotated[TProtMDFe, Element] = None


class TRetEnviMDFe(ComplexType):
    """Tipo Retorno do Recibo do Pedido de Autorização do MDF-e"""
    versao: Annotated[TVerMDe, Attribute] = None
    tpAmb: Annotated[str, Element] = None
    cUF: Annotated[TCodUfIBGE, Element] = None
    verAplic: Annotated[TVerAplic, Element] = None
    cStat: Annotated[TStat, Element] = None
    xMotivo: Annotated[TMotivo, Element] = None

    class _infRec(ComplexType):
        """Dados do Recibo do Arquivo"""
        nRec: Annotated[TRec, Element] = None
        dhRecbto: Annotated[datetime, Element] = None
        tMed: Annotated[int, Element] = None

    infRec: Annotated[_infRec, Element] = None


class TEndereco(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None
    cPais: Annotated[str, Element] = None
    xPais: Annotated[str, Element] = None


class TEndernac(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TEnderFer(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TEndOrg(ComplexType):
    """Tipo Dados do Endereço"""
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    CEP: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None
    cPais: Annotated[str, Element] = None
    xPais: Annotated[str, Element] = None
    fone: Annotated[str, Element] = None


class TLocal(ComplexType):
    """Tipo Dados do Local de Origem ou Destino"""
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TEndReEnt(ComplexType):
    """ Tipo Dados do Local de Retirada ou Entrega"""
    CNPJ: Annotated[TCnpj, Element] = None
    CPF: Annotated[TCpf, Element] = None
    CNPJ_CPF = Choice("CNPJ", "CPF")
    xNome: Annotated[str, Element] = None
    xLgr: Annotated[str, Element] = None
    nro: Annotated[str, Element] = None
    xCpl: Annotated[str, Element] = None
    xBairro: Annotated[str, Element] = None
    cMun: Annotated[TCodMunIBGE, Element] = None
    xMun: Annotated[str, Element] = None
    UF: Annotated[TUf, Element] = None


class TPIN(str):
    """Tipo Dados PIN (SUFRAMA)"""
    pass


class TNFeNF(ComplexType):
    """Tipo  de Dados das Notas Fiscais Papel e Eletrônica"""

    class _infNFe(ComplexType):
        """Informações da NF-e"""
        chNFe: Annotated[TChNFe, Element] = None
        PIN: Annotated[TPIN, Element] = None

    infNFe: Annotated[_infNFe, Element] = None

    class _infNF(ComplexType):
        """Informações da NF mod 1 e 1A"""

        class _emi(ComplexType):
            """Informações do Emitente da NF"""
            CNPJ: Annotated[TCnpj, Element] = None
            xNome: Annotated[str, Element] = None
            UF: Annotated[TUf, Element] = None

        emi: Annotated[_emi, Element] = None

        class _dest(ComplexType):
            """Informações do Destinatário da NF"""
            CNPJ: Annotated[TCnpjOpc, Element] = None
            CPF: Annotated[TCpf, Element] = None
            CNPJ_CPF = Choice("CNPJ", "CPF")
            xNome: Annotated[str, Element] = None
            UF: Annotated[TUf, Element] = None

        dest: Annotated[_dest, Element] = None
        serie: Annotated[str, Element] = None
        nNF: Annotated[str, Element] = None
        dEmi: Annotated[TData, Element] = None
        vNF: Annotated[TDec_1302, Element] = None
        PIN: Annotated[TPIN, Element] = None

    infNF: Annotated[_infNF, Element] = None
    infNFe_infNF = Choice("infNFe", "infNF")


class TModDoc(str):
    """ Tipo Modelo do Documento"""
    pass


class TTime(str):
    """ Tipo hora"""
    pass


